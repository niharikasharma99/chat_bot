#description : This is a smart chat bot program 
pip install nltk
#import the libraries
from newspaper import Article
import random
import string
import nltk
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.metrics.pairwise import cosine_similarity
import numpy as np
import warnings 
warnings.filterwarnings('ignore')#Download the punkt package

nltk.download('punkt',quiet=True )

# get the article
article=Article('https://www.mayoclinic.org/diseases-conditions/chronic-kidney-disease/symptoms-causes/syc-20354521')
article.download()
article.parse()
article.nlp()
Corpus=article.text

#print the article text
print(Corpus)

#tokenization
text=Corpus
sentence_list=nltk.sent_tokenize(text)# A list of sentences

#print the list of sentences
print(sentence_list)

# function to return a random gereeting response to a user greeting
def greeting_reponse(text):
  text=text.lower()

  #bots reponse
  bot_greetings=['howdy','hi','hey','hello']
  #users greeting
  user_greetings=['hi','hello','hey','greetings','wassap']


  for word in text.split():
    if word in user_greetings:
      return random.choice(bot_greetings)
      
 def index_sort(list_var):
  length=len(list_var)
  list_index=list(range(0,length))

x=list_var
  for i in range(length):
    for j in range(length):
      if x [list_index[i]] > x[list_index[j]]:
        #swap
        temp=list_index[i]
        list_index[i]=list_index[j]
        list_index[j]=temp

    return list_index
#creating the bots response
def bot_response(user_input):
  user_input=user_input.lower()
  sentence_list.append(user_input)
  bot_response=''
  cm=CountVectorizer().fit_transform(sentence_list)
  similarity_scores=cosine_similarity(cm[-1],cm)
  similarity_scores_list= similarity_scores.flatten()
  index = index_sort(similarity_scores_list)
  index=index[1:]
  response_flag=0

  j=0
  for i in range (len(index)):
    if similarity_scores_list[index[i]] > 0.0:
      bot_response=bot_response +' '+sentence_list[index[i]]
      response_flag=1
      j=j+1
    if j > 2:
      break

  if response_flag==0:
    bot_response=bot_response+' '+"I apologize,I dont Understand"
  
  sentence_list.remove(user_input)

  return bot_response
#start the chat
print('Doc Bot:I am Doctor bot for short . I will answer queries about chronic kidney disease for exit type bye')

exit_list=['exit','see you later','bye','quit','break']

while(True):

  user_input=input()
  if user_input.lower( ) in exit_list:
    print('Doc bot: chat with u later !')
    break
  else:
    if greeting_reponse(user_input)!= None:
      print('Doc Bot: '+greeting_reponse(user_input))
    else:
      print('doc Bot: '+bot_response(user_input))
